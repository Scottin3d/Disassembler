00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 05/15/20 1:52:12 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =00001000                  7  start       EQU         $1000       *progrma start address
00000000  =0000A000                  8  stack       EQU         $A000       *stack address
00000000  =00000000                  9  srtAddr     EQU         $00000000   *start address for input
00000000  =00FFFFFF                 10  endAddr     EQU         $00FFFFFF   *end address for input
00000000  =0000000D                 11  CR          EQU         $0D
00000000  =0000000A                 12  LF          EQU         $0A 
00000000                            13  
00000000                            14  ****************************************************************** 
00000000                            15  * Initialize
00000000                            16  ******************************************************************
00001000                            17              ORG         start
00001000                            18              
00001000  6100 0018                 19              BSR         dis_intro *display the introduction to program
00001004                            20  
00001004                            21  main        
00001004  6100 0022                 22              BSR         CLEAR
00001008  4FF9 0000A000             23              LEA         stack, SP
0000100E  45F9 0000109E             24              LEA         buffer, A2
00001014  2C4A                      25              MOVEA.L     A2, A6          
00001016                            26              
00001016                            27  user_input
00001016  6100 0022                 28              BSR         INPUT            
0000101A                            29  ******************************************************************            
0000101A                            30  
0000101A                            31  dis_intro
0000101A  103C 000D                 32              MOVE.B      #13, D0
0000101E  43F9 0000104E             33              LEA         start_msg , A1
00001024  4E4F                      34              TRAP        #15
00001026  4E75                      35              RTS
00001028                            36      
00001028                            37  * clears registers
00001028                            38  CLEAR:          
00001028  4240                      39              CLR         D0
0000102A  4241                      40              CLR         D1
0000102C  4242                      41              CLR         D2
0000102E  4243                      42              CLR         D3
00001030  4244                      43              CLR         D4
00001032  4245                      44              CLR         D5
00001034  4246                      45              CLR         D6
00001036  4247                      46              CLR         D7
00001038  4E75                      47              RTS
0000103A                            48              
0000103A                            49  INPUT:
0000103A  103C 0001                 50              MOVE.B      #1, D0
0000103E  43F9 00001066             51              LEA         strAddr_msg, A1
00001044  3239 00001082             52              MOVE.W      strAddr_len,D1
0000104A  4E4F                      53              TRAP        #15
0000104C                            54              
0000104C  4E75                      55  end_input   RTS
0000104E                            56  
0000104E= 43 53 53 20 34 32 ...     57  start_msg           DC.B    'CSS 422 Final Project',CR,LF,0
00001066= 53 74 61 72 74 69 ...     58  strAddr_msg         DC.B    'Starting Memory Location: $',0
00001082= 001C                      59  strAddr_len         DC.W    strAddr_len-strAddr_msg
00001084= 45 6E 64 69 6E 67 ...     60  endAddr_msg         DC.B    'Ending Memory Location: $',0
0000109E                            61  
0000109E= 01                        62  buffer              DC.B   1
0000109F                            63  
0000109F                            64  
0000109F                            65      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BUFFER              109E
CLEAR               1028
CR                  D
DIS_INTRO           101A
ENDADDR             FFFFFF
ENDADDR_MSG         1084
END_INPUT           104C
INPUT               103A
LF                  A
MAIN                1004
SRTADDR             0
STACK               A000
START               1000
START_MSG           104E
STRADDR_LEN         1082
STRADDR_MSG         1066
USER_INPUT          1016
