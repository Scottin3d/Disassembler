00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 5/31/2020 12:26:43 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000  =0000000D                  7  CR      EQU     $0D
00000000  =0000000A                  8  LF      EQU     $0A    
00000000                             9  
00001000                            10      ORG    $1000
00001000                            11  START:                  ; first instruction of program
00001000                            12  
00001000                            13  * Put program code here
00001000                            14  
00001000                            15  
00001000                            16  START_MSG:
00001000  43F9 00001028             17          LEA             DISPLAY_START_MESSAGE,A1
00001006  103C 000E                 18          MOVE.B          #14,D0  
0000100A  4E4F                      19          TRAP            #15
0000100C                            20      
0000100C  43F9 00001040             21          LEA             DISPLAY_START_ADDRESS,A1
00001012  103C 000E                 22          MOVE.B          #14,D0  
00001016  4E4F                      23          TRAP            #15
00001018                            24  
00001018  103C 0004                 25          MOVE.B          #4,D0          
0000101C  4E4F                      26          TRAP            #15             
0000101E  B2BC 000BBDCC             27          CMP.L           #0769484,D1
00001024                            28  
00001024  FFFF FFFF                 29      SIMHALT ; halt simulator
00001028                            30  
00001028                            31  READ_BIT:
00001028                            32      *Read first btye of word
00001028                            33      
00001028                            34  HEX_DECODE:
00001028                            35      *Sets each hexbit to register
00001028                            36  
00001028                            37  
00001028                            38  *Subroutines:
00001028                            39      
00001028                            40  *00                 
00001028                            41  *00                 MOVE
00001028                            42  *00                 MOVEA
00001028                            43  
00001028                            44  *01 
00001028                            45  *01001              MOVEM
00001028                            46  *0100               LEA
00001028                            47  *0110               Bcc
00001028                            48  *0100111010         JSR
00001028                            49  *0100111001110101   RTS
00001028                            50  
00001028                            51  *10
00001028                            52  *1011               CMP
00001028                            53  *1000               OR
00001028                            54  *1001               SUB
00001028                            55  
00001028                            56  *11
00001028                            57  *1100               ADD
00001028                            58  *1100               AND
00001028                            59  *1110               LSL
00001028                            60  *1110000            ASR    
00001028                            61  
00001028                            62  * Put variables and constants here
00001028                            63  
00001028= 43 53 53 20 34 32 ...     64  DISPLAY_START_MESSAGE   DC.B    'CSS 422 Final Project',CR,LF,0
00001040= 53 74 61 72 74 69 ...     65  DISPLAY_START_ADDRESS   DC.B    'Starting Memory Location: ',0
0000105B= 45 6E 64 69 6E 67 ...     66  DISPLAY_END_ADDRESS     DC.B    'Ending Memory Location: ',0
00001074                            67  
00001074                            68      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CR                  D
DISPLAY_END_ADDRESS  105B
DISPLAY_START_ADDRESS  1040
DISPLAY_START_MESSAGE  1028
HEX_DECODE          1028
LF                  A
READ_BIT            1028
START               1000
START_MSG           1000
